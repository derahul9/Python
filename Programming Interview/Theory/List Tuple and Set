Mutable vs Immutable:
---------------------
https://www.afternerd.com/blog/difference-between-list-tuple/#:~:text=The%20Key%20Difference%20between%20a,mutable%20whereas%20tuples%20are%20immutable.&text=A%20mutable%20data%20type%20means,An%20immutable%20object%20can't.

List: Lists are just like dynamic sized arrays, declared in other languages (vector in C++ and ArrayList in Java). Lists need not be homogeneous always which makes
it the most powerful tool in Python. The main characteristics of lists are –

The list is a datatype available in Python which can be written as a list of comma-separated values (items) between square brackets.
List are mutable .i.e it can be converted into another data type and can store any data element in it.
List can store any type of element.

Tuple: Tuple is a collection of Python objects much like a list. The sequence of values stored in a tuple can be of any type, and they are indexed by integers.
Values of a tuple are syntactically separated by ‘commas’. Although it is not necessary, it is more common to define a tuple by closing the sequence of values in
parentheses. The main characteristics of tuples are –

Tuple is an immutable sequence in python.
It cannot be changed or replaced since it is immutable.
It is defined under parenthesis().
Tuples can store any type of element.

Set: In Python, Set is an unordered collection of data type that is iterable, mutable, and has no duplicate elements. The major advantage of using a set,
as opposed to a list, is that it has a highly optimized method for checking whether a specific element is contained in the set. The main characteristics of set are –

Sets are an unordered collection of elements or unintended collection of items In python.
Here the order in which the elements are added into the set is not fixed, it can change frequently.
It is defined under curly braces{}
Sets are mutable, however, only immutable objects can be stored in it.
Dictionaries and sets are almost identical, except that sets do not actually contain values: a set is simply a collection of unique keys.
As the name implies, sets are very useful for doing set operations.

List - [], Can have duplicate elements, mutable, accessed using index
Tuple - (), Can have duplicate elements, immutable
Set - {}. can't have duplicate elements, mutable, Sets doesn't allow indexing and are implemented on hash tables.

List useful:
--------------------
[start : stop : steps]

a = "jkhhkk"
b = a[::-1]

Which means that slicing will start from index start will go up to stop in step of steps. Default value of start is 0, stop is last index of list and for step it is 1.
So [: stop] will slice list from starting till stop index and [start : ] will slice list from start index till end. Negative value of steps shows right to left traversal
instead of left to right traversal that is why [::-1] prints list in reverse order.

sort and reverse sort:
--------------------------
d = [1,4,53,23,6]
d.sort()
d.sort(reverse=1)

if this needs to be stored in a variable, use below
e = sorted(d)